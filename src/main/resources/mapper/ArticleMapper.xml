<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sea.dao.ArticleDao"> <!--mapper文件，用于编写一些特殊的SQL需求-->
<!-- todo:根据条件查询文章列表 -->
    <!--定义查询结果集-->
    <resultMap id="BaseResultMap" type="com.sea.entity.Article">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="category_id" jdbcType="BIGINT" property="categoryId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
        <result column="count_views" jdbcType="INTEGER" property="countViews"/>
        <result column="total_words" jdbcType="INTEGER" property="totalWords"/>
        <result column="likes" jdbcType="INTEGER" property="likes"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="image_url" jdbcType="VARCHAR" property="imageUrl"/>
        <result column="is_top" jdbcType="INTEGER" property="isTop"/>
        <result column="is_delete" jdbcType="INTEGER" property="isDelete"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="c_name" jdbcType="VARCHAR" property="categoryName"/>
        <collection property="tagList" ofType="com.sea.entity.Tag">
            <!--此处使用<collection>，联表查询，得到该文章的所有标签list-->
            <id column="t_id" property="id"/>
            <result column="t_name" property="tagName"/>
            <result column="t_create_time" jdbcType="TIMESTAMP" property="createTime"/>
            <result column="t_update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        </collection>
    </resultMap>

    <!--编写查询语句-->
    <select id="getArticlePage" resultMap="BaseResultMap" parameterType="com.sea.model.vo.ConditionVO">
        SELECT a.*,
               atag.article_id,
               atag.tag_id,
               tag.id AS t_id,
               tag.tag_name AS t_name,
               tag.create_time AS t_create_time,
               tag.update_time AS t_update_time,
               c.category_name AS c_name
        FROM tb_article a
            LEFT JOIN tb_category c ON c.id = a.category_id
            LEFT JOIN tb_article_tag atag ON atag.article_id = a.id
            LEFT JOIN tb_tag tag ON tag.id = atag.tag_id
        <where>
            <!-- "#"表示预编译参数，相当于占位符，MyBatis会自动为其添加单引号''，可以预防SQL注入-->
            <!-- "$"表示直接传值参数，以文本形式插入SQL语句，有SQL注入风险-->
            <if test="conditionVO.status != null">
                and a.status = #{conditionVO.status}
            </if>
            <if test="conditionVO.isDelete != null">
                and a.is_delete = #{conditionVO.isDelete}
            </if>
            <if test="conditionVO.isTop != null">
                and a.is_top = #{conditionVO.isTop}
            </if>
            <if test="conditionVO.categoryId != null">
                and a.category_id = #{conditionVO.categoryId}
            </if>
            <if test="conditionVO.tagId != null">
                and tag.id = #{conditionVO.tagId}
            </if>
            <if test="conditionVO.status != null">
                and a.status = #{conditionVO.status}
            </if>
            <if test="conditionVO.keywords != null">
                and a.keywords LIKE CONCAT('%', #{conditionVO.keywords}, '%')
            </if>
            <if test="conditionVO.title != null">
                and a.title LIKE CONCAT('%', #{conditionVO.title}, '%')
            </if>
        </where>
        <!--分页参数由MyBatis自动指定-->
        <!--<choose>-->
        <!--    <when test="conditionVO.pageNum != null and conditionVO.pageSize != null">-->
        <!--        LIMIT #{conditionVO.pageNum}, #{conditionVO.pageSize}-->
        <!--    </when>-->
        <!--</choose>-->
        <!-- 处理没有分页参数的情况，可以根据实际需求决定是否添加空白字符串或其他逻辑 -->
        <!-- <otherwise></otherwise> -->
    </select>

    <select id="getArticleById" resultMap="BaseResultMap" parameterType="Integer">
        SELECT a.*,
        atag.article_id,
        atag.tag_id,
        tag.id AS t_id,
        tag.tag_name AS t_name,
        tag.create_time AS t_create_time,
        tag.update_time AS t_update_time,
        c.category_name AS c_name
        FROM tb_article a
        LEFT JOIN tb_category c ON c.id = a.category_id
        LEFT JOIN tb_article_tag atag ON atag.article_id = a.id
        LEFT JOIN tb_tag tag ON tag.id = atag.tag_id
        <where>
            <!-- "#"表示预编译参数，相当于占位符，MyBatis会自动为其添加单引号''，可以预防SQL注入-->
            <!-- "$"表示直接传值参数，以文本形式插入SQL语句，有SQL注入风险-->
            <if test="id != null">
                a.id = #{id}
            </if>
        </where>
    </select>

    <select id="getArticleByTagId" resultMap="BaseResultMap" parameterType="com.sea.model.vo.ConditionVO">
        SELECT a.*,
        atag.article_id,
        atag.tag_id,
        tag.id AS t_id,
        tag.tag_name AS t_name,
        c.category_name AS c_name
        FROM tb_article a
        LEFT JOIN tb_category c ON c.id = a.category_id
        LEFT JOIN tb_article_tag atag ON atag.article_id = a.id
        LEFT JOIN tb_tag tag ON tag.id = atag.tag_id
        <where>
            <!-- "#"表示预编译参数，相当于占位符，MyBatis会自动为其添加单引号''，可以预防SQL注入-->
            <!-- "$"表示直接传值参数，以文本形式插入SQL语句，有SQL注入风险-->
            <if test="conditionVO.status != null">
                and a.status = #{conditionVO.status}
            </if>
            <if test="conditionVO.isDelete != null">
                and a.is_delete = #{conditionVO.isDelete}
            </if>
            <if test="conditionVO.tagId != null">
                and a.tag_id = #{conditionVO.tagId}
            </if>
        </where>

    </select>


</mapper>